;
! function($) {
    //1.获取cookie，根据cookie的值，创建购物车商品列表
    //商品列表的结构提前写好，隐藏在结构中
    //对隐藏的结构进行不同赋值。
    if (getcookie('cartsid') && getcookie('cartnum')) {
        var s = getcookie('cartsid').split(','); //存放sid数组
        var n = getcookie('cartnum').split(','); //存放num数组

        $.each(s, function(index, value) {
            createcart(value, n[index]);
        });
    }

    function addcookie(key, value, day) {
        var date = new Date(); //创建日期对象
        date.setDate(date.getDate() + day); //过期时间：获取当前的日期+天数，设置给date
        document.cookie = key + '=' + encodeURI(value) + ';expires=' + date; //添加cookie，设置过期时间
    }
    //得到cookie
    function getcookie(key) {
        var str = decodeURI(document.cookie);
        var arr = str.split('; ');
        for (var i = 0; i < arr.length; i++) {
            var arr1 = arr[i].split('=');
            if (arr1[0] == key) {
                return arr1[1];
            }
        }
    }
    var sidarr = []; //将取得cookie的编号存放到此数组
    var numarr = []; //将取得cookie的数量存放到此数组
    //获取cookie,值变成数组
    function getcookievalue() {
        if (getcookie('cartsid') && getcookie('cartnum')) {
            sidarr = getcookie('cartsid').split(','); //[1,2,3,4]
            numarr = getcookie('cartnum').split(','); //[50,60,70,80]
        }
    }
    getcookievalue();

    var sidarr = [];
    var numarr = [];

    function cookieToArray() {
        if (getcookie('cartsid')) {
            sidarr = getcookie('cartsid').split(',');
        }

        if (getcookie('cartnum')) {
            numarr = getcookie('cartnum').split(',');
        }
    }
    /*事件委托*/
    $('.deta_box').on('click', '.sum_btn a', function() {
        var sid = location.href.split('=')[1];
        getcookievalue();
        if ($.inArray(sid, sidarr) != -1) { //存在
            var num = parseInt(numarr[$.inArray(sid, sidarr)]) + parseInt($('.n_input').val()); //当前的值和cookie里面的值(和sid对应的值)进行累加
            numarr[$.inArray(sid, sidarr)] = num; //将新的数量，覆盖原先的值。
            addcookie('cartnum', numarr, 10);

        } else { //不存在
            sidarr.push(sid); //将sid追加到数组
            addcookie('cartsid', sidarr, 10); //存cookie
            numarr.push($('.n_input').val()); //将表单的值追加到数组
            addcookie('cartnum', numarr, 10); //存cookie
        }
    })

    //2.拼接商品列表
    function createcart(sid, num) { //sid：图片的编号  num:商品的数量

        $.ajax({
            type: 'post',
            url: 'http://10.31.156.25/1804/moto/php/details.php',
            data: {
                sid: sid
            },
            dataType: 'json'
        }).done(function(data) {
            var $arr = data.src.split(',');
            var $title = data.title.split(',');
            $.each(data, function(index, value) {
                if (sid == data[index]) { //图片的sid和数据里面的sid匹配
                    var $clone = $('.shopp_tet:hidden').clone(true); //对隐藏的模块进行克隆
                    //都是赋值
                    $clone.find('.item1').find('img').attr('src', $arr[0]);
                    $clone.find('.item1').find('img').attr({ 'sid': data.sid });
                    $clone.find('.item1').find('.text').html($title[0]);
                    $clone.find('.item2').find('.pic').html(data.price);
                    $clone.find('.item3').find('input').val(num);
                    //计算价格,每个商品的价格
                    var $pric = parseFloat($clone.find('.item2 .pic').html()); //获取单价
                    $clone.find('.item4 .price').html(($pric * num).toFixed(2)); //num：数量
                    //$clone.find('.cart_button strong').html(($pric * num).toFixed(2));
                    $clone.css('display', 'block'); //克隆的模块是隐藏，显示出来。
                    $('.newshop').append($clone);
                    $('.mycart').css('display', 'block'); //追加
                    kong(); //购物车是否为空
                    totalprice(); //总价和总数
                }
            });
        });
    }
    //4.商品列表(cookie)不存在，购物车为空
    function kong() {
        if (getcookie('cartsid')) { //cookie存在，有商品，购物车不再为空
            $('.cart').hide();
        } else {
            $('.cart').show();
        }
    }
    kong();

    //5.每个商品的总价已经通过创建时求得了。求所有商品的总价和总的商品的个数
    function totalprice() { //计算总价
        var total = 0; //总的价格
        var countnum = 0; //总的数量
        $('.shopp_tet:visible').each(function() { //可视的商品列表进行遍历，循环叠加
            total += parseFloat($(this).find('.item4 .price').html());
            //countnum += parseInt($(this).find('.item3').find('input').val());
        });
        //赋值
        $('.cart_button strong').html('￥' + total.toFixed(2));
        $('.price_box .money').html('￥' + total.toFixed(2));
        //$('.amount-sum em').html(countnum);
    }
    //6.修改数量的操作
    //改变商品数量++
    $('.max').on('click', function() {
        var $count = $(this).parents('.shopp_tet').find('.item3 input').val();
        $count++;
        if ($count >= 99) {
            $count = 99;
        }
        $(this).parents('.shopp_tet').find('.item3 input').val($count);
        $(this).parents('.shopp_tet').find('.item4 .price').html(singlegoodsprice($(this))); //改变后的价格
        totalprice();
        setcookie($(this));

    });
    //改变商品数量--
    $('.min').on('click', function() {
        var $count = $(this).parents('.shopp_tet').find('.item3 input').val();
        $count--;
        if ($count <= 1) {
            $count = 1;
        }
        $(this).parents('.shopp_tet').find('.item3 input').val($count);
        $(this).parents('.shopp_tet').find('.item4 .price').html(singlegoodsprice($(this))); //改变后的价格
        totalprice();
        setcookie($(this));
    });
    //直接输入改变数量
    $('.item3 input').on('input', function() {
        var $reg = /^\d+$/g; //只能输入数字
        var $value = parseInt($(this).val());
        if ($reg.test($value)) {
            if ($value >= 99) { //限定范围
                $(this).val(99);
            } else if ($value <= 0) {
                $(this).val(1);
            } else {
                $(this).val($value);
            }
        } else {
            $(this).val(1);
        }
        $(this).parents('.shopp_tet').find('.item4 .price').html(singlegoodsprice($(this))); //改变后的价格
        totalprice();
        setcookie($(this));
    });
    //7.计算数量改变后单个商品的价格
    function singlegoodsprice(row) { //row:当前元素
        var $pric = parseFloat(row.parents('.shopp_tet').find('.item2 .pic').html());
        var $cnum = parseInt(row.parents('.shopp_tet').find('.item3 input').val());
        return ($pric * $cnum).toFixed(2);
    }
    //9.将改变后的数量的值存放到cookie
    function setcookie(obj) { //obj:当前操作的对象
        cookieToArray();
        var $index = obj.parents('.shopp_tet').find('.item1').find('img').attr('sid');
        numarr[sidarr.indexOf($index)] = obj.parents('.shopp_tet').find('.item3 input').val();
        addcookie('cartnum', numarr.toString(), 7);
    }

    //10.删除
    //删除cookie的函数
    function delgoodslist(sid, sidarr) { //sid：当前的sid，sidarr:cookie的sid的值
        var index = -1;
        for (var i = 0; i < sidarr.length; i++) {
            if (sid == sidarr[i]) {
                index = i;
            }
        }
        sidarr.splice(index, 1); //删除数组对应的值
        numarr.splice(index, 1); //删除数组对应的值
        addcookie('cartsid', sidarr.toString(), 7); //添加cookie
        addcookie('cartnum', numarr.toString(), 7);
    }
    //删除单个商品的函数(委托)
    $('.mycart').on('click', '.item5', function(ev) {
        cookieToArray(); //转数组
        if (confirm('你确定要删除吗？')) {
            $(this).first().parents('.shopp_tet').remove();
        }
        delgoodslist($(this).first().parents('.shopp_tet').find('img').attr('sid'), sidarr);
        totalprice();
    });
}(jQuery)